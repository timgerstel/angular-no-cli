{
  "version": 3,
  "sources": ["../../node_modules/zone.js/fesm2015/zone.js", "../../src/main.ts", "../../src/app/app.module.ts", "../../src/app/app.component.ts", "../../src/shared/plugin.ts", "../../src/shared/inject-resources.ts", "../../src/app/app.component.css", "../../src/app/app.component.html", "../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts", "../../../../packages/platform-browser/src/browser/browser_adapter.ts", "../../../../packages/platform-browser/src/browser/testability.ts", "../../../../packages/platform-browser/src/browser/xhr.ts", "../../../../packages/platform-browser/src/dom/events/event_manager.ts", "../../../../packages/platform-browser/src/dom/shared_styles_host.ts", "../../../../packages/platform-browser/src/dom/dom_renderer.ts", "../../../../packages/platform-browser/src/dom/events/dom_events.ts", "../../../../packages/platform-browser/src/dom/events/key_events.ts", "../../../../packages/platform-browser/src/browser.ts", "../../../../packages/platform-browser/src/browser/meta.ts", "../../../../packages/platform-browser/src/browser/title.ts", "../../../../packages/platform-browser/src/dom/util.ts", "../../../../packages/platform-browser/src/browser/tools/common_tools.ts", "../../../../packages/platform-browser/src/browser/tools/tools.ts", "../../../../packages/platform-browser/src/dom/debug/by.ts", "../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts", "../../../../packages/platform-browser/src/security/dom_sanitization_service.ts", "../../../../packages/platform-browser/src/hydration.ts", "../../../../packages/platform-browser/src/version.ts", "../../../../packages/platform-browser/src/platform-browser.ts", "../../../../packages/platform-browser/public_api.ts", "../../../../packages/platform-browser/index.ts", "../../../../packages/platform-browser/platform-browser.ts"],
  "sourcesContent": ["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n// Initialize global `Zone` constant.\n(function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ?\n                this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = {\n        name: 'NO ZONE'\n    };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(globalThis);\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            if (value instanceof ZoneAwarePromise) {\n                return value;\n            }\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static withResolvers() {\n            const result = {};\n            result.promise = new ZoneAwarePromise((res, rej) => {\n                result.resolve = res;\n                result.reject = rej;\n            });\n            return result;\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = this.constructor?.[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options && typeof options === 'object' && options.signal &&\n                    typeof options.signal === 'object' ?\n                    options.signal :\n                    undefined;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    nativeListener.call(signal, 'abort', () => {\n                        task.zone.cancelTask(task);\n                    }, { once: true });\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback',\n        'formAssociatedCallback', 'formDisabledCallback', 'formResetCallback',\n        'formStateRestoreCallback'\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n});\n", "// src/main.ts\nimport \"zone.js\";\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {AppModule} from './app/app.module';\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));", "// src/main.ts\nimport {NgModule} from \"@angular/core\";\nimport {provideHttpClient} from \"@angular/common/http\";\nimport {AppComponent} from \"./app.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule],\n    providers: [provideHttpClient()],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n", "import {Component, ViewContainerRef, Injector, inject, EventEmitter, ViewChild, ElementRef } from \"@angular/core\";\nimport {Plugin_0, DesktopPluginDefinitionImpl} from '../shared/plugin';\nimport {Angular2InjectionTokens} from '../shared/inject-resources';\nimport styles from './app.component.css';\nimport html from './app.component.html';\n\n@Component({\n    selector: \"app-root\",\n    template: html,\n    styles: [styles]\n})\nexport class AppComponent {\n    title = 'POC for Angular Component Loader';\n    private vcr = inject(ViewContainerRef);\n\n    @ViewChild('pluginOne', {read: ViewContainerRef})\n    pluginOneRef!: ViewContainerRef;\n\n    @ViewChild('pluginTwo', {read: ViewContainerRef})\n    pluginTwoRef!: ElementRef;\n\n    @ViewChild('pluginThree') pluginThreeRef!: ElementRef;\n  \n    \n    async loadPlugin() {\n        const pluginLib = '@company/plugin';\n        const pluginModule = await import(pluginLib);\n        console.log(`plugin loaded`, pluginModule);\n        const plugin = pluginModule.pluginComponent;\n        console.log(`plugin`, plugin);\n\n\n        const vtPluginLib = '@company/vtplugin';\n        const vtPluginModule = await import(vtPluginLib);\n        console.log(`vtPlugin loaded`, vtPluginModule);\n        const vtPlugin = vtPluginModule.pluginComponent;\n        console.log(`vtPlugin`, vtPlugin);\n\n        const reactPluginLib = \"@company/samplereact\";\n        const reactPluginModule = await import(reactPluginLib);\n        console.log(`sample react loaded`, reactPluginModule);\n        // const reactPlugin = reactPluginModule.pluginComponent;\n        // console.log(`reactPlugin`, reactPlugin);\n\n      \n        const pluginDef = {\n            identifier: 'org.zowe.foo',\n            version: '0.0.1',\n            pluginVersion: '0.0.1',\n            pluginType: 'application'\n        };\n\n        const vtPluginDef = {\n            identifier: 'org.zowe.terminal.vt',\n            version: '0.0.1',\n            pluginVersion: '3.0.0',\n            pluginType: 'application'\n        };\n\n        const reactPluginDef = {\n            identifier: 'org.zowe.zlux.sample.react',\n            version: '0.0.1',\n            pluginVersion: '2.17.0',\n            pluginType: 'application'\n        };\n\n      console.log(this.pluginOneRef);\n\n\n      const componentRef = this.pluginOneRef.createComponent(plugin, {injector: makeInjector(pluginDef)} );\n        if (componentRef) {\n            console.log(`component created`, componentRef);\n            componentRef.changeDetectorRef.detectChanges();\n        }\n\n      const vtComponentRef = this.pluginTwoRef.createComponent(vtPlugin, {injector: makeInjector(vtPluginDef)} );\n        if (vtComponentRef) {\n            console.log(`component created`, vtComponentRef);\n            vtComponentRef.changeDetectorRef.detectChanges();\n        }\n\n      reactPluginModule.renderPlugin(this.pluginThreeRef.nativeElement, makeInjector(reactPluginDef));\n      // const reactComponentRef = this.pluginThreeRef.createComponent(vtPlugin, {injector: makeInjector(reactPluginDef)} );\n      // if (reactComponentRef) {\n      //     console.log(`component created`, reactComponentRef);\n      //     reactComponentRef.changeDetectorRef.detectChanges();\n      // }\n    }\n}\n  \nfunction makeInjector(pluginDef: any): Injector {\n  let pluginDefImpl = new DesktopPluginDefinitionImpl(new Plugin_0(pluginDef));\n\n\n  let resizeEmitter = new EventEmitter<{ width: number, height: number }>();\n  setInterval(()=> {\n    resizeEmitter.emit({width: 640, height: 480});\n  },3000);\n  \n  \n  return Injector.create([\n    {\n      provide: Angular2InjectionTokens.LOGGER,\n      useValue: {\n        debug: console.log,\n        info: console.log,\n        warn: console.log\n      }\n    },\n    {\n      provide: Angular2InjectionTokens.VIEWPORT_EVENTS,\n      useValue: {\n        resized: resizeEmitter,\n        spawnContextMenu: (xRel, yRel, items) => console.log('viewport event spawn context menu'),\n        registerCloseHandler: (handler: ()=>Promise<any>) => console.log('viewport event register close handler')\n      }\n    },\n    {\n      provide: Angular2InjectionTokens.WINDOW_ACTIONS,\n      useValue: {\n        close: function() {console.log('close window action')},\n        minimize: function() {console.log('minimize window action')},\n        maximize: function() {console.log('maximize window action')},\n        restore: function() {console.log('restore window action')},\n        setTitle: function(title: string) {console.log('setTitle window action', title)},\n        setPosition: function(pos: {top: number, left: number, width: number, height: number}) {console.log('setPosition window action', pos)},\n        spawnContextMenu: function(xPos: number, yPos: number, items: any[], isAbsolutePos?: boolean) {console.log('spawnContextMenu window action'); return true;},\n        registerCloseHandler: function(handler: () => Promise<void>) {console.log('registerCloseHandler window action')}\n      }\n    },\n    {\n      provide: Angular2InjectionTokens.LAUNCH_METADATA,\n      useValue: {data: 'hello world'}\n    },\n    {\n      provide: Angular2InjectionTokens.PLUGIN_DEFINITION,\n      useValue: pluginDefImpl\n    }\n  ]);\n}\n", "import { DesktopPluginDefinition } from './mvd-hosting';\n\n  const enum PluginType {\n    Desktop = \"desktop\",\n    Application = \"application\",\n    Bootstrap = \"bootstrap\"\n  }\n\n  interface PluginInterface {\n    getKey():string;\n    getIdentifier():string;\n    getVersion():string;\n    getWebContent():any;\n    getType():PluginType;\n    getCopyright(): string;\n    hasComponents(): boolean;\n  }\n\n  interface ContainerPluginDefinition {\n    getBasePlugin():Plugin;\n  }\n\nexport interface DesktopPluginDefinition extends ContainerPluginDefinition {\n  getIdentifier(): string;\n  getFramework(): string;\n  getCopyright(): string;\n  hasComponents(): boolean;\n}\n\n\nexport class ContainerPluginImpl implements ContainerPluginDefinition {\n  constructor(private plugin: Plugin) {\n\n  }\n  getBasePlugin() {\n    return this.plugin;\n  }\n}\n\nexport class DesktopPluginDefinitionImpl implements DesktopPluginDefinition {\n  private key:string;\n\n  constructor(\n    public readonly basePlugin: Plugin\n  ) {\n    this.key = basePlugin.getKey();\n  }\n\n  get hasWebContent(): boolean {\n    return this.basePlugin.getWebContent() != null;\n  }\n\n  getFramework(): string {\n    if (this.hasWebContent) {\n      if ('framework' in this.basePlugin.getWebContent()) {\n        return this.basePlugin.getWebContent().framework;\n      } else {\n        this.logger.warn(`Plugin ${this.getIdentifier()} has no framework specified`);\n        return 'unsupported';\n      }\n    } else {\n      return 'n/a';\n    }\n  }\n\n  getIdentifier(): string {\n    return this.basePlugin.getIdentifier();\n  }\n\n  getKey(): string {\n    return this.key;\n  }\n\n  getBasePlugin(): Plugin {\n    return this.basePlugin;\n  }\n\n  getCopyright():string {\n    return this.basePlugin.getCopyright();\n  }\n\n  hasComponents(): boolean {\n    return this.basePlugin.hasComponents();\n  }\n  \n  get label(): string {\n    if (this.hasWebContent && this.basePlugin.getWebContent().launchDefinition != null) {\n      return this.basePlugin.getWebContent().launchDefinition.pluginShortNameDefault;\n    } else {\n      return this.basePlugin.getIdentifier().split('\\.').slice(-1)[0];\n    }\n  }\n}\n\n\nfunction parsePluginType(value: string): PluginType | null {\n  switch (value) {\n    case \"desktop\":\n      return PluginType.Desktop;\n    case \"application\":\n      return PluginType.Application;\n    case \"bootstrap\":\n      return PluginType.Bootstrap;\n    default:\n      return null;\n  }\n}\n\nexport abstract class Plugin implements PluginInterface {\n  abstract readonly identifier: string;\n  abstract readonly version: string;\n  abstract readonly type: PluginType;\n  abstract readonly webContent: any;\n  abstract readonly copyright: string;\n\n  static parsePluginDefinition(definition: any): Plugin {\n    return new Plugin_0(definition);\n  }\n\n  abstract getKey():string;//For use in mappings of unique Plugins to objects\n\n  abstract getIdentifier():string;\n\n  abstract getVersion():string;\n\n  abstract getWebContent():any;\n\n  abstract getType():PluginType;\n  \n  abstract getCopyright():string;\n\n  abstract hasComponents(): boolean;\n\n  public toString():string {\n    return \"<plugin \"+this.getKey()+\">\";\n  }\n}\n\nexport class Plugin_0 extends Plugin {\n  readonly identifier: string;\n  readonly version: string;\n  readonly type: PluginType;\n  readonly webContent: any;\n  readonly key:string;\n  readonly copyright:string;\n  readonly _hasComponents: boolean;\n\n  constructor(definition: any) {\n    super()\n\n    if (typeof definition.identifier === \"string\") {\n      this.identifier = definition.identifier;\n    } else {\n      throw new Error(\"Plugin identifier is not a string\");\n    }\n\n    if (typeof definition.pluginVersion === \"string\") {\n      this.version = definition.pluginVersion;\n    } else {\n      throw new Error(\"Plugin version is not a string\");\n    }\n\n    if (typeof definition.pluginType === \"string\") {\n      const pluginType = parsePluginType(definition.pluginType);\n      if (pluginType != null) {\n        this.type = pluginType;\n      } else {\n        throw new Error(\"Plugin type is not present\");\n      }\n    } else {\n      throw new Error(\"Plugin type is not a string\");\n    }\n    \n    this.key = definition.identifier + '@' + definition.pluginVersion;\n\n    this.webContent = definition.webContent;\n\n    if(this.webContent) {\n      if('hasComponents' in this.webContent) {\n        this._hasComponents = this.webContent.hasComponents;\n      } else {\n        this._hasComponents = false;\n      }\n    }\n    \n    if (typeof definition.copyright === \"string\") {\n      this.copyright = definition.copyright;\n    } \n  }\n\n  getIdentifier():string{\n    return this.identifier;\n  }\n\n  getKey():string{\n    return this.key;\n  }\n\n  getVersion():string{\n    return this.version;\n  }\n\n  getWebContent():any{\n    return this.webContent;\n  }\n\n  getType():PluginType{\n    return this.type;\n  }\n\n  getCopyright():string{\n    return this.copyright==null?'':this.copyright;\n  }\n\n  hasComponents(): boolean {\n    return this._hasComponents;\n  }\n\n}\n", "import { Subject } from 'rxjs';\n\nexport const Angular2InjectionTokens = {\n  /* Module level resources */\n  PLUGIN_DEFINITION: 'virtualdesktop-ng2.0-0-0.plugin-definition',\n  LOGGER: 'virtualdesktop-ng2.0-0-0.logger',\n  VIEWPORT_EVENTS: 'virtualdesktop-ng2.0-0-0.viewport-events',\n  WINDOW_ACTIONS: 'virtualdesktop-ng2.0-0-0.window-actions', /* optional */\n  LAUNCH_METADATA: 'virtualdesktop-ng2.0-0-0.launch-metadata',\n\n};\n\n\nexport interface Angular2PluginWindowActions {\n  readonly close: () => void;\n  readonly minimize: () => void;\n  readonly maximize: () => void;\n  readonly restore: () => void;\n  readonly setTitle: (title: string) => void;\n  readonly setPosition: (pos: {top: number, left: number, width: number, height: number}) => void;\n  readonly spawnContextMenu: (xPos: number, yPos: number, items: any[], isAbsolutePos?: boolean) => boolean;\n  readonly registerCloseHandler: (handler: () => Promise<void>) => void;\n}\n\nexport interface Angular2PluginViewportEvents {\n  readonly resized: Subject<{width: number, height: number}>;\n  readonly spawnContextMenu: (xPos: number, yPos: number, items: any[], isAbsolutePos?: boolean) => boolean;\n  readonly registerCloseHandler: (handler: () => Promise<any>) => void;\n}\n", "main {\n  color: red;\n  margin-bottom: 1rem;\n}", "<!--src/app/app.component.html-->\n<main>{{ title }}</main>\n<button (click)=\"loadPlugin()\">Load Plugin</button>\n\n<!-- Window -->\n<div style=\"width:640px; height: 480px\">\n  <!-- Viewport -->\n  <div #pluginOne></div>\n</div>\n\n<!-- Window -->\n<div style=\"width:640px; height: 480px\">\n <!-- Viewport -->\n <div #pluginTwo></div>\n</div>\n\n<div style=\"width:640px; height: 480px\">\n  <!-- Viewport -->\n  <div #pluginThree></div>\n </div>\n ", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵDomAdapter as DomAdapter} from '@angular/common';\n\n\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\n  override readonly supportsDOMEvents: boolean = true;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵparseCookieValue as parseCookieValue, ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    setRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  override onAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener);\n    return () => {\n      el.removeEventListener(evt, listener);\n    };\n  }\n  override dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n  }\n  override remove(node: Node): void {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n  override createElement(tagName: string, doc?: Document): HTMLElement {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  override createHtmlDocument(): Document {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  override getDefaultDocument(): Document {\n    return document;\n  }\n\n  override isElementNode(node: Node): boolean {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  override isShadowRoot(node: any): boolean {\n    return node instanceof DocumentFragment;\n  }\n\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  override getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  override getBaseHref(doc: Document): string|null {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  override resetBaseElement(): void {\n    baseElement = null;\n  }\n  override getUserAgent(): string {\n    return window.navigator.userAgent;\n  }\n  override getCookie(name: string): string|null {\n    return parseCookieValue(document.cookie, name);\n  }\n}\n\nlet baseElement: HTMLElement|null = null;\nfunction getBaseElementHref(): string|null {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\n\nfunction relativePath(url: string): string {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {GetTestability, Testability, TestabilityRegistry, ɵglobal as global, ɵRuntimeError as RuntimeError} from '@angular/core';\n\nimport {RuntimeErrorCode} from '../errors';\n\nexport class BrowserGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new RuntimeError(\n            RuntimeErrorCode.TESTABILITY_NOT_FOUND,\n            (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback: () => void) => {\n      const testabilities = global['getAllAngularTestabilities']() as Testability[];\n      let count = testabilities.length;\n      const decrement = function() {\n        count--;\n        if (count == 0) {\n          callback();\n        }\n      };\n      testabilities.forEach((testability) => {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, (<any>elem).host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {XhrFactory} from '@angular/common';\nimport {Injectable} from '@angular/core';\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\n@Injectable()\nexport class BrowserXhr implements XhrFactory {\n  build(): XMLHttpRequest {\n    return new XMLHttpRequest();\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, InjectionToken, NgZone, ɵRuntimeError as RuntimeError} from '@angular/core';\n\nimport {RuntimeErrorCode} from '../../errors';\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>(ngDevMode ? 'EventManagerPlugins' : '');\n\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n@Injectable()\nexport class EventManager {\n  private _plugins: EventManagerPlugin[];\n  private _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(@Inject(EVENT_MANAGER_PLUGINS) plugins: EventManagerPlugin[], private _zone: NgZone) {\n    plugins.forEach((plugin) => {\n      plugin.manager = this;\n    });\n    this._plugins = plugins.slice().reverse();\n  }\n\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n  addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n  getZone(): NgZone {\n    return this._zone;\n  }\n\n  /** @internal */\n  _findPluginFor(eventName: string): EventManagerPlugin {\n    let plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n    plugin = plugins.find((plugin) => plugin.supports(eventName));\n    if (!plugin) {\n      throw new RuntimeError(\n          RuntimeErrorCode.NO_PLUGIN_FOR_EVENT,\n          (typeof ngDevMode === 'undefined' || ngDevMode) &&\n              `No event manager plugin found for event ${eventName}`);\n    }\n\n    this._eventNameToPlugin.set(eventName, plugin);\n    return plugin;\n  }\n}\n\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nexport abstract class EventManagerPlugin {\n  // TODO: remove (has some usage in G3)\n  constructor(private _doc: any) {}\n\n  // Using non-null assertion because it's set by EventManager's constructor\n  manager!: EventManager;\n\n  /**\n   * Should return `true` for every event name that should be supported by this plugin\n   */\n  abstract supports(eventName: string): boolean;\n\n  /**\n   * Implement the behaviour for the supported events\n   */\n  abstract addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, isPlatformServer} from '@angular/common';\nimport {APP_ID, CSP_NONCE, Inject, Injectable, OnDestroy, Optional, PLATFORM_ID} from '@angular/core';\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n\n@Injectable()\nexport class SharedStylesHost implements OnDestroy {\n  // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n  private readonly styleRef = new Map < string /** Style string */, {\n    elements: HTMLStyleElement[];\n    usage: number\n  }\n  > ();\n  private readonly hostNodes = new Set<Node>();\n  private readonly styleNodesInDOM: Map<string, HTMLStyleElement>|null;\n  private readonly platformIsServer: boolean;\n\n  constructor(\n      @Inject(DOCUMENT) private readonly doc: Document,\n      @Inject(APP_ID) private readonly appId: string,\n      @Inject(CSP_NONCE) @Optional() private nonce?: string|null,\n      @Inject(PLATFORM_ID) readonly platformId: object = {}) {\n    this.styleNodesInDOM = this.collectServerRenderedStyles();\n    this.platformIsServer = isPlatformServer(platformId);\n    this.resetHostNodes();\n  }\n\n  addStyles(styles: string[]): void {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, 1);\n\n      if (usageCount === 1) {\n        this.onStyleAdded(style);\n      }\n    }\n  }\n\n  removeStyles(styles: string[]): void {\n    for (const style of styles) {\n      const usageCount = this.changeUsageCount(style, -1);\n\n      if (usageCount <= 0) {\n        this.onStyleRemoved(style);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    if (styleNodesInDOM) {\n      styleNodesInDOM.forEach((node) => node.remove());\n      styleNodesInDOM.clear();\n    }\n\n    for (const style of this.getAllStyles()) {\n      this.onStyleRemoved(style);\n    }\n\n    this.resetHostNodes();\n  }\n\n  addHost(hostNode: Node): void {\n    this.hostNodes.add(hostNode);\n\n    for (const style of this.getAllStyles()) {\n      this.addStyleToHost(hostNode, style);\n    }\n  }\n\n  removeHost(hostNode: Node): void {\n    this.hostNodes.delete(hostNode);\n  }\n\n  private getAllStyles(): IterableIterator<string> {\n    return this.styleRef.keys();\n  }\n\n  private onStyleAdded(style: string): void {\n    for (const host of this.hostNodes) {\n      this.addStyleToHost(host, style);\n    }\n  }\n\n  private onStyleRemoved(style: string): void {\n    const styleRef = this.styleRef;\n    styleRef.get(style)?.elements?.forEach((node) => node.remove());\n    styleRef.delete(style);\n  }\n\n  private collectServerRenderedStyles(): Map<string, HTMLStyleElement>|null {\n    const styles = this.doc.head?.querySelectorAll<HTMLStyleElement>(\n        `style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n\n    if (styles?.length) {\n      const styleMap = new Map<string, HTMLStyleElement>();\n\n      styles.forEach((style) => {\n        if (style.textContent != null) {\n          styleMap.set(style.textContent, style);\n        }\n      });\n\n      return styleMap;\n    }\n\n    return null;\n  }\n\n  private changeUsageCount(style: string, delta: number): number {\n    const map = this.styleRef;\n    if (map.has(style)) {\n      const styleRefValue = map.get(style)!;\n      styleRefValue.usage += delta;\n\n      return styleRefValue.usage;\n    }\n\n    map.set(style, {usage: delta, elements: []});\n    return delta;\n  }\n\n  private getStyleElement(host: Node, style: string): HTMLStyleElement {\n    const styleNodesInDOM = this.styleNodesInDOM;\n    const styleEl = styleNodesInDOM?.get(style);\n    if (styleEl?.parentNode === host) {\n      // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n      styleNodesInDOM!.delete(style);\n\n      styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This attribute is solely used for debugging purposes.\n        styleEl.setAttribute('ng-style-reused', '');\n      }\n\n      return styleEl;\n    } else {\n      const styleEl = this.doc.createElement('style');\n\n      if (this.nonce) {\n        styleEl.setAttribute('nonce', this.nonce);\n      }\n\n      styleEl.textContent = style;\n\n      if (this.platformIsServer) {\n        styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n\n      host.appendChild(styleEl);\n\n      return styleEl;\n    }\n  }\n\n  private addStyleToHost(host: Node, style: string): void {\n    const styleEl = this.getStyleElement(host, style);\n    const styleRef = this.styleRef;\n    const styleElRef = styleRef.get(style)?.elements;\n    if (styleElRef) {\n      styleElRef.push(styleEl);\n    } else {\n      styleRef.set(style, {elements: [styleEl], usage: 1});\n    }\n  }\n\n  private resetHostNodes(): void {\n    const hostNodes = this.hostNodes;\n    hostNodes.clear();\n    // Re-add the head element back since this is the default host.\n    hostNodes.add(this.doc.head);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, isPlatformServer, ɵgetDOM as getDOM} from '@angular/common';\nimport {APP_ID, CSP_NONCE, Inject, Injectable, InjectionToken, NgZone, OnDestroy, PLATFORM_ID, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation, ɵRuntimeError as RuntimeError} from '@angular/core';\n\nimport {RuntimeErrorCode} from '../errors';\n\nimport {EventManager} from './events/event_manager';\nimport {SharedStylesHost} from './shared_styles_host';\n\nexport const NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/MathML/',\n};\n\nconst COMPONENT_REGEX = /%COMP%/g;\n\nexport const COMPONENT_VARIABLE = '%COMP%';\nexport const HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nexport const REMOVE_STYLES_ON_COMPONENT_DESTROY =\n    new InjectionToken<boolean>(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n      providedIn: 'root',\n      factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n    });\n\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nexport function shimStylesContent(compId: string, styles: string[]): string[] {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\n\n@Injectable()\nexport class DomRendererFactory2 implements RendererFactory2, OnDestroy {\n  private readonly rendererByCompId =\n      new Map<string, EmulatedEncapsulationDomRenderer2|NoneEncapsulationDomRenderer>();\n  private readonly defaultRenderer: Renderer2;\n  private readonly platformIsServer: boolean;\n\n  constructor(\n      private readonly eventManager: EventManager,\n      private readonly sharedStylesHost: SharedStylesHost,\n      @Inject(APP_ID) private readonly appId: string,\n      @Inject(REMOVE_STYLES_ON_COMPONENT_DESTROY) private removeStylesOnCompDestroy: boolean,\n      @Inject(DOCUMENT) private readonly doc: Document,\n      @Inject(PLATFORM_ID) readonly platformId: Object,\n      readonly ngZone: NgZone,\n      @Inject(CSP_NONCE) private readonly nonce: string|null = null,\n  ) {\n    this.platformIsServer = isPlatformServer(platformId);\n    this.defaultRenderer =\n        new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n  }\n\n  createRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n\n    if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n      // Domino does not support shadow DOM.\n      type = {...type, encapsulation: ViewEncapsulation.Emulated};\n    }\n\n    const renderer = this.getOrCreateRenderer(element, type);\n    // Renderers have different logic due to different encapsulation behaviours.\n    // Ex: for emulated, an attribute is added to the element.\n    if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n      renderer.applyToHost(element);\n    } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n      renderer.applyStyles();\n    }\n\n    return renderer;\n  }\n\n  private getOrCreateRenderer(element: any, type: RendererType2): Renderer2 {\n    const rendererByCompId = this.rendererByCompId;\n    let renderer = rendererByCompId.get(type.id);\n\n    if (!renderer) {\n      const doc = this.doc;\n      const ngZone = this.ngZone;\n      const eventManager = this.eventManager;\n      const sharedStylesHost = this.sharedStylesHost;\n      const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n      const platformIsServer = this.platformIsServer;\n\n      switch (type.encapsulation) {\n        case ViewEncapsulation.Emulated:\n          renderer = new EmulatedEncapsulationDomRenderer2(\n              eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc,\n              ngZone, platformIsServer);\n          break;\n        case ViewEncapsulation.ShadowDom:\n          return new ShadowDomRenderer(\n              eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce,\n              platformIsServer);\n        default:\n          renderer = new NoneEncapsulationDomRenderer(\n              eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone,\n              platformIsServer);\n          break;\n      }\n\n      rendererByCompId.set(type.id, renderer);\n    }\n\n    return renderer;\n  }\n\n  ngOnDestroy() {\n    this.rendererByCompId.clear();\n  }\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n\n  /**\n   * By default this renderer throws when encountering synthetic properties\n   * This can be disabled for example by the AsyncAnimationRendererFactory\n   */\n  throwOnSyntheticProps = true;\n\n  constructor(\n      private readonly eventManager: EventManager, private readonly doc: Document,\n      private readonly ngZone: NgZone, private readonly platformIsServer: boolean) {}\n\n  destroy(): void {}\n\n  destroyNode = null;\n\n  createElement(name: string, namespace?: string): any {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return this.doc.createElement(name);\n  }\n\n  createComment(value: string): any {\n    return this.doc.createComment(value);\n  }\n\n  createText(value: string): any {\n    return this.doc.createTextNode(value);\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    let el: any = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new RuntimeError(\n          RuntimeErrorCode.ROOT_NODE_NOT_FOUND,\n          (typeof ngDevMode === 'undefined' || ngDevMode) &&\n              `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n\n  parentNode(node: any): any {\n    return node.parentNode;\n  }\n\n  nextSibling(node: any): any {\n    return node.nextSibling;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el: any, name: string): void {\n    el.classList.add(name);\n  }\n\n  removeClass(el: any, name: string): void {\n    el.classList.remove(name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    if (el == null) {\n      return;\n    }\n\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n        checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node: any, value: string): void {\n    node.nodeValue = value;\n  }\n\n  listen(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps &&\n        checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = getDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n\n    return this.eventManager.addEventListener(\n               target, event, this.decoratePreventDefault(callback)) as VoidFunction;\n  }\n\n  private decoratePreventDefault(eventHandler: Function): Function {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return (event: any) => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ?\n          this.ngZone.runGuarded(() => eventHandler(event)) :\n          eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n\n      return undefined;\n    };\n  }\n}\n\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new RuntimeError(\n        RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY,\n        `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${\n            name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n  }\n}\n\n\nfunction isTemplateNode(node: any): node is HTMLTemplateElement {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  private shadowRoot: any;\n\n  constructor(\n      eventManager: EventManager,\n      private sharedStylesHost: SharedStylesHost,\n      private hostEl: any,\n      component: RendererType2,\n      doc: Document,\n      ngZone: NgZone,\n      nonce: string|null,\n      platformIsServer: boolean,\n  ) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.shadowRoot = (hostEl as any).attachShadow({mode: 'open'});\n\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = shimStylesContent(component.id, component.styles);\n\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  private nodeOrShadowRoot(node: any): any {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  override appendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  override insertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  override removeChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n  override parentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n  override destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\n\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  private readonly styles: string[];\n\n  constructor(\n      eventManager: EventManager,\n      private readonly sharedStylesHost: SharedStylesHost,\n      component: RendererType2,\n      private removeStylesOnCompDestroy: boolean,\n      doc: Document,\n      ngZone: NgZone,\n      platformIsServer: boolean,\n      compId?: string,\n  ) {\n    super(eventManager, doc, ngZone, platformIsServer);\n    this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n  }\n\n  applyStyles(): void {\n    this.sharedStylesHost.addStyles(this.styles);\n  }\n\n  override destroy(): void {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n\n    this.sharedStylesHost.removeStyles(this.styles);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  private contentAttr: string;\n  private hostAttr: string;\n\n  constructor(\n      eventManager: EventManager, sharedStylesHost: SharedStylesHost, component: RendererType2,\n      appId: string, removeStylesOnCompDestroy: boolean, doc: Document, ngZone: NgZone,\n      platformIsServer: boolean) {\n    const compId = appId + '-' + component.id;\n    super(\n        eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone,\n        platformIsServer, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n\n  applyToHost(element: any): void {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n\n  override createElement(parent: any, name: string): Element {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n@Injectable()\nexport class DomEventsPlugin extends EventManagerPlugin {\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n  override supports(eventName: string): boolean {\n    return true;\n  }\n\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, handler as EventListener, false);\n    return () => this.removeEventListener(element, eventName, handler as EventListener);\n  }\n\n  removeEventListener(target: any, eventName: string, callback: Function): void {\n    return target.removeEventListener(eventName, callback as EventListener);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {EventManagerPlugin} from './event_manager';\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap: {[k: string]: string} = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n@Injectable()\nexport class KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(@Inject(DOCUMENT) doc: any) {\n    super(doc);\n  }\n\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n  override supports(eventName: string): boolean {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName)!;\n\n    const outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  /**\n   * Parses the user provided full keyboard event definition and normalizes it for\n   * later internal use. It ensures the string is all lowercase, converts special\n   * characters to a standard spelling, and orders all the values consistently.\n   *\n   * @param eventName The name of the key event to listen for.\n   * @returns an object with the full, normalized string, and the dom event name\n   * or null in the case when the event doesn't match a keyboard event.\n   */\n  static parseEventName(eventName: string): {fullKey: string, domEventName: string}|null {\n    const parts: string[] = eventName.toLowerCase().split('.');\n\n    const domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop()!);\n\n    let fullKey = '';\n    let codeIX = parts.indexOf('code');\n    if (codeIX > -1) {\n      parts.splice(codeIX, 1);\n      fullKey = 'code.';\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n    const result: {fullKey: string, domEventName: string} = {} as any;\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  /**\n   * Determines whether the actual keys pressed match the configured key code string.\n   * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n   * event is attached to the DOM during the `addEventListener` call. This is unseen\n   * by the end user and is normalized for internal consistency and parsing.\n   *\n   * @param event The keyboard event.\n   * @param fullKeyCode The normalized user defined expected key event string\n   * @returns boolean.\n   */\n  static matchEventFullKeyCode(event: KeyboardEvent, fullKeyCode: string): boolean {\n    let keycode = _keyMap[event.key] || event.key;\n    let key = '';\n    if (fullKeyCode.indexOf('code.') > -1) {\n      keycode = event.code;\n      key = 'code.';\n    }\n    // the keycode could be unidentified so we have to check here\n    if (keycode == null || !keycode) return false;\n    keycode = keycode.toLowerCase();\n    if (keycode === ' ') {\n      keycode = 'space';  // for readability\n    } else if (keycode === '.') {\n      keycode = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName !== keycode) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          key += modifierName + '.';\n        }\n      }\n    });\n    key += keycode;\n    return key === fullKeyCode;\n  }\n\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n  static eventCallback(fullKey: string, handler: Function, zone: NgZone): Function {\n    return (event: KeyboardEvent) => {\n      if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n\n  /** @internal */\n  static _normalizeKey(keyName: string): string {\n    return keyName === 'esc' ? 'escape' : keyName;\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, DOCUMENT, XhrFactory, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationConfig as ApplicationConfigFromCore, ApplicationModule, ApplicationRef, createPlatformFactory, ErrorHandler, Inject, InjectionToken, ModuleWithProviders, NgModule, NgZone, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, platformCore, PlatformRef, Provider, RendererFactory2, SkipSelf, StaticProvider, Testability, TestabilityRegistry, Type, ɵINJECTOR_SCOPE as INJECTOR_SCOPE, ɵinternalCreateApplication as internalCreateApplication, ɵRuntimeError as RuntimeError, ɵsetDocument, ɵTESTABILITY as TESTABILITY, ɵTESTABILITY_GETTER as TESTABILITY_GETTER} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserGetTestability} from './browser/testability';\nimport {BrowserXhr} from './browser/xhr';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {SharedStylesHost} from './dom/shared_styles_host';\nimport {RuntimeErrorCode} from './errors';\n\n\n/**\n * Set of config options available during the application bootstrap operation.\n *\n * @publicApi\n *\n * @deprecated\n * `ApplicationConfig` has moved, please import `ApplicationConfig` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\ntype ApplicationConfig = ApplicationConfigFromCore;\nexport {ApplicationConfig};\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nexport function bootstrapApplication(\n    rootComponent: Type<unknown>, options?: ApplicationConfig): Promise<ApplicationRef> {\n  return internalCreateApplication({rootComponent, ...createProvidersConfig(options)});\n}\n\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nexport function createApplication(options?: ApplicationConfig) {\n  return internalCreateApplication(createProvidersConfig(options));\n}\n\nfunction createProvidersConfig(options?: ApplicationConfig) {\n  return {\n    appProviders: [\n      ...BROWSER_MODULE_PROVIDERS,\n      ...(options?.providers ?? []),\n    ],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nexport function provideProtractorTestingSupport(): Provider[] {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\n\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n\nexport function _document(): any {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: StaticProvider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nexport const platformBrowser: (extraProviders?: StaticProvider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(\n    (typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\n\nconst TESTABILITY_PROVIDERS = [\n  {\n    provide: TESTABILITY_GETTER,\n    useClass: BrowserGetTestability,\n    deps: [],\n  },\n  {\n    provide: TESTABILITY,\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, TESTABILITY_GETTER]\n  },\n  {\n    provide: Testability,  // Also provide as `Testability` for backwards-compatibility.\n    useClass: Testability,\n    deps: [NgZone, TestabilityRegistry, TESTABILITY_GETTER]\n  }\n];\n\nconst BROWSER_MODULE_PROVIDERS: Provider[] = [\n  {provide: INJECTOR_SCOPE, useValue: 'root'},\n  {provide: ErrorHandler, useFactory: errorHandler, deps: []}, {\n    provide: EVENT_MANAGER_PLUGINS,\n    useClass: DomEventsPlugin,\n    multi: true,\n    deps: [DOCUMENT, NgZone, PLATFORM_ID]\n  },\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT]},\n  DomRendererFactory2, SharedStylesHost, EventManager,\n  {provide: RendererFactory2, useExisting: DomRendererFactory2},\n  {provide: XhrFactory, useClass: BrowserXhr, deps: []},\n  (typeof ngDevMode === 'undefined' || ngDevMode) ?\n      {provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true} :\n      []\n];\n\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n  exports: [CommonModule, ApplicationModule],\n})\nexport class BrowserModule {\n  constructor(@Optional() @SkipSelf() @Inject(BROWSER_MODULE_PROVIDERS_MARKER)\n              providersAlreadyPresent: boolean|null) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n      throw new RuntimeError(\n          RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED,\n          `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n              `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n    }\n  }\n\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   *\n   * @deprecated Use {@link APP_ID} instead to set the application ID.\n   */\n  static withServerTransition(params: {appId: string}): ModuleWithProviders<BrowserModule> {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n      ],\n    };\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ɵDomAdapter as DomAdapter, ɵgetDOM as getDOM} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\n/**\n * Represents the attributes of an HTML `<meta>` element. The element itself is\n * represented by the internal `HTMLMetaElement`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see {@link Meta}\n *\n * @publicApi\n */\nexport type MetaDefinition = {\n  charset?: string;\n  content?: string;\n  httpEquiv?: string;\n  id?: string;\n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}&{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root'})\nexport class Meta {\n  private _dom: DomAdapter;\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    this._dom = getDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n  addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n  addTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n  getTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n  getTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n  updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta: HTMLMetaElement = this.getTag(selector)!;\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n  removeTag(attrSelector: string): void {\n    this.removeTagElement(this.getTag(attrSelector)!);\n  }\n\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n  removeTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  private _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const selector: string = this._parseSelector(meta);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n      if (elem !== undefined) return elem;\n    }\n    const element: HTMLMetaElement = this._dom.createElement('meta') as HTMLMetaElement;\n    this._setMetaElementAttributes(meta, element);\n    const head = this._doc.getElementsByTagName('head')[0];\n    head.appendChild(element);\n    return element;\n  }\n\n  private _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach(\n        (prop: string) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  private _parseSelector(tag: MetaDefinition): string {\n    const attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  private _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every(\n        (key: string) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  private _getMetaKeyMap(prop: string): string {\n    return META_KEYS_MAP[prop] || prop;\n  }\n}\n\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP: {[prop: string]: string;} = {\n  httpEquiv: 'http-equiv'\n};\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root'})\nexport class Title {\n  constructor(@Inject(DOCUMENT) private _doc: any) {}\n  /**\n   * Get the title of the current HTML document.\n   */\n  getTitle(): string {\n    return this._doc.title;\n  }\n\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n  setTitle(newTitle: string) {\n    this._doc.title = newTitle || '';\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵglobal as global} from '@angular/core';\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = global['ng'] = (global['ng'] as {[key: string]: any} | undefined) || {};\n    ng[name] = value;\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ComponentRef} from '@angular/core';\n\nexport class ChangeDetectionPerfRecord {\n  constructor(public msPerTick: number, public numTicks: number) {}\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n\n  constructor(ref: ComponentRef<any>) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n    const start = performance.now();\n    let numTicks = 0;\n    while (numTicks < 5 || (performance.now() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performance.now();\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵgetDOM as getDOM} from '@angular/common';\nimport {DebugElement, DebugNode, Predicate, Type} from '@angular/core';\n\n\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nexport class By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all(): Predicate<DebugNode> {\n    return () => true;\n  }\n\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type: Type<any>): Predicate<DebugNode> {\n    return (debugNode) => debugNode.providerTokens!.indexOf(type) !== -1;\n  }\n}\n\nfunction elementMatches(n: any, selector: string): boolean {\n  if (getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) ||\n        n.msMatchesSelector && n.msMatchesSelector(selector) ||\n        n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, NgModule, Optional, Provider, ɵConsole as Console} from '@angular/core';\n\nimport {EVENT_MANAGER_PLUGINS, EventManagerPlugin} from './event_manager';\n\n\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\n\n/**\n * Function that loads HammerJS, returning a promise that is resolved once HammerJs is loaded.\n *\n * @publicApi\n */\nexport type HammerLoader = () => Promise<void>;\n\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nexport const HAMMER_LOADER = new InjectionToken<HammerLoader>('HammerLoader');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n  destroy?(): void;\n}\n\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n@Injectable()\nexport class HammerGestureConfig {\n  /**\n   * A set of supported event names for gestures to be used in Angular.\n   * Angular supports all built-in recognizers, as listed in\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  events: string[] = [];\n\n  /**\n   * Maps gesture event names to a set of configuration options\n   * that specify overrides to the default values for specific properties.\n   *\n   * The key is a supported event name to be configured,\n   * and the options object contains a set of properties, with override values\n   * to be applied to the named recognizer event.\n   * For example, to disable recognition of the rotate event, specify\n   *  `{\"rotate\": {\"enable\": false}}`.\n   *\n   * Properties that are not present take the HammerJS default values.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   *\n   */\n  overrides: {[key: string]: Object} = {};\n\n  /**\n   * Properties whose default values can be overridden for a given event.\n   * Different sets of properties apply to different events.\n   * For information about which properties are supported for which events,\n   * and their allowed and default values, see\n   * [HammerJS documentation](https://hammerjs.github.io/).\n   */\n  options?: {\n    cssProps?: any;\n    domEvents?: boolean;\n    enable?: boolean | ((manager: any) => boolean);\n    preset?: any[];\n    touchAction?: string;\n    recognizers?: any[];\n    inputClass?: any;\n    inputTarget?: EventTarget;\n  };\n\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const mc = new Hammer!(element, this.options);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n}\n\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n@Injectable()\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n  private _loaderPromise: Promise<void>|null = null;\n\n  constructor(\n      @Inject(DOCUMENT) doc: any,\n      @Inject(HAMMER_GESTURE_CONFIG) private _config: HammerGestureConfig, private console: Console,\n      @Optional() @Inject(HAMMER_LOADER) private loader?: HammerLoader|null) {\n    super(doc);\n  }\n\n  override supports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!(window as any).Hammer && !this.loader) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this.console.warn(\n            `The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n            `loaded and no custom loader has been specified.`);\n      }\n      return false;\n    }\n\n    return true;\n  }\n\n  override addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n    if (!(window as any).Hammer && this.loader) {\n      this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader!());\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n      let deregister: Function = () => {\n        cancelRegistration = true;\n      };\n\n      zone.runOutsideAngular(\n          () => this._loaderPromise!\n                    .then(() => {\n                      // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                      if (!(window as any).Hammer) {\n                        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                          this.console.warn(\n                              `The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                        }\n                        deregister = () => {};\n                        return;\n                      }\n\n                      if (!cancelRegistration) {\n                        // Now that Hammer is loaded and the listener is being loaded for real,\n                        // the deregistration function changes from canceling registration to\n                        // removal.\n                        deregister = this.addEventListener(element, eventName, handler);\n                      }\n                    })\n                    .catch(() => {\n                      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(\n                            `The \"${eventName}\" event cannot be bound because the custom ` +\n                            `Hammer.JS loader failed.`);\n                      }\n                      deregister = () => {};\n                    }));\n\n      // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n      const callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() {\n          handler(eventObj);\n        });\n      };\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback);\n        // destroy mc to prevent memory leak\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName: string): boolean {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n}\n\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\n@NgModule({\n  providers: [\n    {\n      provide: EVENT_MANAGER_PLUGINS,\n      useClass: HammerGesturesPlugin,\n      multi: true,\n      deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Console, [new Optional(), HAMMER_LOADER]]\n    },\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: []},\n  ]\n})\nexport class HammerModule {\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {forwardRef, Inject, Injectable, Sanitizer, SecurityContext, ɵ_sanitizeHtml as _sanitizeHtml, ɵ_sanitizeUrl as _sanitizeUrl, ɵallowSanitizationBypassAndThrow as allowSanitizationBypassOrThrow, ɵbypassSanitizationTrustHtml as bypassSanitizationTrustHtml, ɵbypassSanitizationTrustResourceUrl as bypassSanitizationTrustResourceUrl, ɵbypassSanitizationTrustScript as bypassSanitizationTrustScript, ɵbypassSanitizationTrustStyle as bypassSanitizationTrustStyle, ɵbypassSanitizationTrustUrl as bypassSanitizationTrustUrl, ɵBypassType as BypassType, ɵRuntimeError as RuntimeError, ɵunwrapSafeValue as unwrapSafeValue, ɵXSS_SECURITY_URL as XSS_SECURITY_URL} from '@angular/core';\n\nimport {RuntimeErrorCode} from '../errors';\n\nexport {SecurityContext};\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @publicApi\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @publicApi\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @publicApi\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @publicApi\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @publicApi\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @publicApi\n */\nexport interface SafeResourceUrl extends SafeValue {}\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n@Injectable({providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl)})\nexport abstract class DomSanitizer implements Sanitizer {\n  /**\n   * Gets a safe value from either a known safe value or a value with unknown safety.\n   *\n   * If the given value is already a `SafeValue`, this method returns the unwrapped value.\n   * If the security context is HTML and the given value is a plain string, this method\n   * sanitizes the string, removing any potentially unsafe content.\n   * For any other security context, this method throws an error if provided\n   * with a plain string.\n   */\n  abstract sanitize(context: SecurityContext, value: SafeValue|string|null): string|null;\n\n  /**\n   * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n   * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n   * leave safe HTML intact, so in most situations this method should not be used.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustHtml(value: string): SafeHtml;\n\n  /**\n   * Bypass security and trust the given value to be safe style value (CSS).\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustStyle(value: string): SafeStyle;\n\n  /**\n   * Bypass security and trust the given value to be safe JavaScript.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustScript(value: string): SafeScript;\n\n  /**\n   * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n   * in hyperlinks or `<img src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustUrl(value: string): SafeUrl;\n\n  /**\n   * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n   * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n   *\n   * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n   * security risks!\n   */\n  abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl;\n}\n\n@Injectable({providedIn: 'root'})\nexport class DomSanitizerImpl extends DomSanitizer {\n  constructor(@Inject(DOCUMENT) private _doc: any) {\n    super();\n  }\n\n  override sanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value as string;\n      case SecurityContext.HTML:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Html)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeHtml(this._doc, String(value)).toString();\n      case SecurityContext.STYLE:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Style)) {\n          return unwrapSafeValue(value);\n        }\n        return value as string;\n      case SecurityContext.SCRIPT:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Script)) {\n          return unwrapSafeValue(value);\n        }\n        throw new RuntimeError(\n            RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT,\n            (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                'unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.Url)) {\n          return unwrapSafeValue(value);\n        }\n        return _sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (allowSanitizationBypassOrThrow(value, BypassType.ResourceUrl)) {\n          return unwrapSafeValue(value);\n        }\n        throw new RuntimeError(\n            RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL,\n            (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `unsafe value used in a resource URL context (see ${XSS_SECURITY_URL})`);\n      default:\n        throw new RuntimeError(\n            RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX,\n            (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `Unexpected SecurityContext ${ctx} (see ${XSS_SECURITY_URL})`);\n    }\n  }\n\n  override bypassSecurityTrustHtml(value: string): SafeHtml {\n    return bypassSanitizationTrustHtml(value);\n  }\n  override bypassSecurityTrustStyle(value: string): SafeStyle {\n    return bypassSanitizationTrustStyle(value);\n  }\n  override bypassSecurityTrustScript(value: string): SafeScript {\n    return bypassSanitizationTrustScript(value);\n  }\n  override bypassSecurityTrustUrl(value: string): SafeUrl {\n    return bypassSanitizationTrustUrl(value);\n  }\n  override bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return bypassSanitizationTrustResourceUrl(value);\n  }\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HttpTransferCacheOptions, ɵwithHttpTransferCache} from '@angular/common/http';\nimport {ENVIRONMENT_INITIALIZER, EnvironmentProviders, inject, makeEnvironmentProviders, NgZone, Provider, ɵConsole as Console, ɵformatRuntimeError as formatRuntimeError, ɵwithDomHydration as withDomHydration,} from '@angular/core';\n\nimport {RuntimeErrorCode} from './errors';\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nexport enum HydrationFeatureKind {\n  NoHttpTransferCache,\n  HttpTransferCacheOptions,\n}\n\n/**\n * Helper type to represent a Hydration feature.\n *\n * @publicApi\n */\nexport interface HydrationFeature<FeatureKind extends HydrationFeatureKind> {\n  ɵkind: FeatureKind;\n  ɵproviders: Provider[];\n}\n\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature<FeatureKind extends HydrationFeatureKind>(\n    ɵkind: FeatureKind, ɵproviders: Provider[] = [],\n    ɵoptions: unknown = {}): HydrationFeature<FeatureKind> {\n  return {ɵkind, ɵproviders};\n}\n\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nexport function withNoHttpTransferCache():\n    HydrationFeature<HydrationFeatureKind.NoHttpTransferCache> {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n\n/**\n * The function accepts a an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * wether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nexport function withHttpTransferCacheOptions(\n    options: HttpTransferCacheOptions,\n    ): HydrationFeature<HydrationFeatureKind.HttpTransferCacheOptions> {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(\n      HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector(): Provider[] {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (ngZone.constructor !== NgZone) {\n        const console = inject(Console);\n        const message = formatRuntimeError(\n            RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE,\n            'Angular detected that hydration was enabled for an application ' +\n                'that uses a custom or a noop Zone.js implementation. ' +\n                'This is not yet a fully supported configuration.');\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n      }\n    },\n    multi: true,\n  }];\n}\n\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](/guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or configure features\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nexport function provideClientHydration(...features: HydrationFeature<HydrationFeatureKind>[]):\n    EnvironmentProviders {\n  const providers: Provider[] = [];\n  const featuresKind = new Set<HydrationFeatureKind>();\n  const hasHttpTransferCacheOptions =\n      featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n\n  for (const {ɵproviders, ɵkind} of features) {\n    featuresKind.add(ɵkind);\n\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n\n  if (typeof ngDevMode !== 'undefined' && ngDevMode &&\n      featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error(\n        'Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n\n  return makeEnvironmentProviders([\n    (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n    withDomHydration(),\n    ((featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions) ?\n         [] :\n         ɵwithHttpTransferCache({})),\n    providers,\n  ]);\n}\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('17.3.4');\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\nimport {makeStateKey as makeStateKeyFromCore, StateKey as StateKeyFromCore, TransferState as TransferStateFromCore} from '@angular/core';\n\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nexport const makeStateKey = makeStateKeyFromCore;\n\n/**\n *\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n *\n * @deprecated `TransferState` has moved, please import `TransferState` from `@angular/core`\n *     instead.\n */\n// The below is a workaround to add a deprecated message.\nexport type TransferState = TransferStateFromCore;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nexport const TransferState: {new (): TransferStateFromCore} = TransferStateFromCore;\n\n/**\n * A type-safe key to use with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n * @publicApi\n *\n * @deprecated `StateKey` has moved, please import `StateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nexport type StateKey<T> = StateKeyFromCore<T>;\n\nexport {ApplicationConfig, bootstrapApplication, BrowserModule, createApplication, platformBrowser, provideProtractorTestingSupport} from './browser';\nexport {Meta, MetaDefinition} from './browser/meta';\nexport {Title} from './browser/title';\nexport {disableDebugTools, enableDebugTools} from './browser/tools/tools';\nexport {By} from './dom/debug/by';\nexport {REMOVE_STYLES_ON_COMPONENT_DESTROY} from './dom/dom_renderer';\nexport {EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin} from './dom/events/event_manager';\nexport {HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerLoader, HammerModule} from './dom/events/hammer_gestures';\nexport {DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl, SafeValue} from './security/dom_sanitization_service';\nexport {HydrationFeature, provideClientHydration, HydrationFeatureKind, withHttpTransferCacheOptions, withNoHttpTransferCache} from './hydration';\n\nexport * from './private_export';\nexport {VERSION} from './version';\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/platform-browser';\n// This file only reexports content of the `src` folder. Keep it that way.\n", "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n", "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],
  "mappings": "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",
  "names": ["performance", "Zone", "self", "delegate", "prop", "ObjectGetOwnPropertyDescriptor", "ObjectDefineProperty", "value", "_global", "event", "patchOptions", "returnTarget", "internalWindow", "window", "isBrowser", "isMix", "zoneSymbolEventNames", "TRUE_STR", "FALSE_STR", "ZONE_SYMBOL_PREFIX", "name", "XMLHttpRequest", "loadTasks", "NgModule", "app_component_default", "app_component_default", "DomAdapter", "setRootDomAdapter", "parseCookieValue", "global", "RuntimeError", "getDOM", "plugin", "styleEl", "i1.EventManager", "i2.SharedStylesHost", "PLATFORM_BROWSER_ID", "TESTABILITY_GETTER", "TESTABILITY", "NgZone", "INJECTOR_SCOPE", "RuntimeError", "getDOM", "elem", "console", "Console", "forwardRef", "allowSanitizationBypassOrThrow", "unwrapSafeValue", "_sanitizeHtml", "RuntimeError", "_sanitizeUrl", "XSS_SECURITY_URL", "bypassSanitizationTrustHtml", "bypassSanitizationTrustStyle", "bypassSanitizationTrustScript", "bypassSanitizationTrustUrl", "bypassSanitizationTrustResourceUrl", "HydrationFeatureKind", "NgModule"]
}
